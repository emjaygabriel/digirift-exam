"use strict";(self["webpackChunkdigirift_exam"]=self["webpackChunkdigirift_exam"]||[]).push([[443],{3359:function(s,t,e){e.r(t),e.d(t,{default:function(){return C}});var a=e(3396);function i(s,t,e,i,n,d){const k=(0,a.up)("ToDoListVuetify");return(0,a.wg)(),(0,a.j4)(k)}var n=e(7139),d=e(9242);const k=(0,a._)("h1",{class:"main-title"},"Vue ToDo List",-1),o={class:"standard-tasks-card"},l={class:"tasks-status-bar"},c={class:"count"},u={class:"count"},r={key:0,class:"tasks-list"},h={key:1,class:"tasks-list"},_=(0,a._)("h3",null,"There are no tasks.",-1),w=[_],v={class:"tasks-action-bar"},f={class:"text-entry"},T={key:0,class:"status_message"};function m(s,t,e,i,_,m){const p=(0,a.up)("font-awesome-icon"),g=(0,a.up)("TaskItem");return(0,a.wg)(),(0,a.iD)(a.HY,null,[k,(0,a._)("div",o,[(0,a._)("div",l,[(0,a._)("div",{onClick:t[0]||(t[0]=(...s)=>m.ViewActiveTasks&&m.ViewActiveTasks(...s)),class:(0,n.C_)(["status-text normal",{active:"active"===s.on_view}]),title:"view active tasks"},[(0,a.Uk)(" Tasks "),(0,a._)("span",c,(0,n.zw)(m.active_tasks_count),1)],2),(0,a._)("div",{onClick:t[1]||(t[1]=(...s)=>m.ViewFinishedTasks&&m.ViewFinishedTasks(...s)),class:(0,n.C_)(["status-text normal",{active:"finished"===s.on_view}]),title:"view finished tasks"},[(0,a.Uk)(" Tasks Done "),(0,a._)("span",u,(0,n.zw)(m.finished_tasks_count),1)],2),(0,a._)("div",{onClick:t[2]||(t[2]=(...s)=>m.ViewDeletedTasks&&m.ViewDeletedTasks(...s)),class:(0,n.C_)(["status-text red",{active:"deleted"===s.on_view}]),title:"view deleted tasks"},[(0,a.Wm)(p,{icon:["fas","trash"]}),(0,a.Uk)(" Tasks ")],2)]),s.task_preview.length>0?((0,a.wg)(),(0,a.iD)("div",r,[((0,a.wg)(!0),(0,a.iD)(a.HY,null,(0,a.Ko)(s.task_preview,((t,e)=>((0,a.wg)(),(0,a.j4)(g,{task:t,on_view:s.on_view,key:e,onDeleteTask:m.DeleteTask,onUpdateTask:m.UpdateTask},null,8,["task","on_view","onDeleteTask","onUpdateTask"])))),128))])):((0,a.wg)(),(0,a.iD)("div",h,w)),(0,a._)("div",v,[(0,a._)("div",f,[(0,a._)("button",{class:"add-task",onClick:t[3]||(t[3]=(...s)=>m.AddTask&&m.AddTask(...s))},[(0,a.Wm)(p,{icon:["fas","circle-plus"]})]),(0,a.wy)((0,a._)("input",{type:"text",class:"input",onKeydown:t[4]||(t[4]=(0,d.D2)((0,d.iM)(((...s)=>m.AddTask&&m.AddTask(...s)),["prevent"]),["enter"])),"onUpdate:modelValue":t[5]||(t[5]=t=>s.text_entry=t)},null,544),[[d.nr,s.text_entry]])])])]),s.status_message.trim().length>0?((0,a.wg)(),(0,a.iD)("div",T,(0,n.zw)(s.status_message),1)):(0,a.kq)("",!0)],64)}var p=e(7594),g={name:"ToDoListVuetify",components:{TaskItem:p.Z},data:()=>({text_entry:"",tasks:[],task_preview:[],status_message:"",on_view:"active"}),created(){try{const s=JSON.parse(localStorage.getItem("tasks"));"undefined"!==typeof s&&null!==s?(this.tasks=s,this.ViewActiveTasks()):(localStorage.setItem("tasks",JSON.stringify([])),this.ViewActiveTasks())}catch(s){this.status_message=s}},watch:{tasks:{handler:function(){switch(this.on_view){case"active":this.ViewActiveTasks();break;case"finished":this.ViewFinishedTasks();break;case"deleted":this.ViewDeletedTasks();break;default:break}localStorage.setItem("tasks",JSON.stringify(this.tasks)),this.$store.dispatch("update_all_tasks",this.tasks)},deep:!0}},computed:{finished_tasks_count(){if(this.tasks.length<1)return 0;const s=this.tasks.reduce(((s,t)=>!0===t.status.done&&!1===t.status.deleted?s+1:s),0);return s},active_tasks_count(){if(this.tasks.length<1)return 0;const s=this.tasks.reduce(((s,t)=>!1===t.status.done&&!1===t.status.deleted?s+1:s),0);return s},deleted_task_count(){if(this.tasks.length<1)return 0;const s=this.tasks.reduce(((s,t)=>!0===t.status.deleted?s+1:s),0);return s}},methods:{AddTask:function(){if(0!==this.text_entry.trim().length){const s={id:Math.floor(100000001*Math.random()),name:this.text_entry,status:{done:!1,deleted:!1}};this.tasks=[...this.tasks,s],this.status_message="New task added!",this.text_entry="",this.ViewActiveTasks()}else this.status_message="Please enter a name of your new task."},ViewActiveTasks:function(){let s=this.tasks.filter((s=>!1===s.status.done));s=s.filter((s=>!1===s.status.deleted)),this.task_preview=s,this.on_view="active"},ViewFinishedTasks:function(){let s=this.tasks.filter((s=>!0===s.status.done));s=s.filter((s=>!1===s.status.deleted)),this.task_preview=s,this.on_view="finished"},ViewDeletedTasks:function(){this.task_preview=this.tasks.filter((s=>!0===s.status.deleted)),this.on_view="deleted"},DeleteTask:function(s){const t=this.tasks.map((s=>s.id)).indexOf(s);t>-1?(this.tasks[t].status.deleted=!0,this.status_message="Task deleted!"):this.status_message="Cannot find the task to delete. Please check with developer."},UpdateTask:function(s){const t=this.tasks.map((s=>s.id)).indexOf(s);t>-1?(this.tasks[t].status.done=!0!==this.tasks[t].status.done,this.status_message="Task updated!"):this.status_message="Cannot find the task to update. Please check with developer."}}},y=e(89);const V=(0,y.Z)(g,[["render",m]]);var D=V,x=(0,a.aZ)({name:"ToDoListVuetifyVersion",components:{ToDoListVuetify:D}});const A=(0,y.Z)(x,[["render",i]]);var C=A}}]);
//# sourceMappingURL=about.7ac5a7c2.js.map